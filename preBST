
public class preBST {
	public boolean validBST(int[] arr) {
		if (arr == null || arr.length == 0) {
			return false;
		}
		return validBSTHelper(arr, 0, arr.length - 1); 
	}
	
	public boolean validBSTHelper(int[] arr, int start, int end) {
		if (start >= end) {
			return true;
		}
		
		int index = findPosition(arr, arr[start], start, end);
		if (index == -1) {
			return validBSTHelper(arr, start + 1, end);
		}
		if (validSeq(arr, arr[start], index, end)) {
			return validBSTHelper(arr, start + 1, index - 1) && validBSTHelper(arr, index, end); 
		}
		return false;
	}
	//all the elements should be greater than the current one
	public boolean validSeq(int[] arr, int element, int start, int end) {
		for (int i = start; i <= end; i++) {
			if (arr[i] < element) {
				return false;
			}
		}
		return true;
	}
	
	public int findPosition(int[] arr, int element, int start, int end) {
		for (int i = start; i <= end; i++) {
			if (element < arr[i]) {
				return i;
			}
		}
		return -1;
	}
}

//Testing
import java.util.ArrayList;
import java.util.Scanner;

public class testing {
	public static void main(String[] args){
		preBST tmp = new preBST();
		int[] arr1 = new int[] {1,2,3};
		int[] arr2= new int[] {2,1,3};
		int[] arr3= new int[] {3,2,1,5,4,6};
		int[] arr4 = new int[] {1,3,4,2};
		int[] arr5 = new int[]{3,4,5,1,2};
		System.out.println(tmp.validBST(arr1));
		System.out.println(tmp.validBST(arr2));
		System.out.println(tmp.validBST(arr3));
		System.out.println(tmp.validBST(arr4));
		System.out.println(tmp.validBST(arr5));
		
	}
}


